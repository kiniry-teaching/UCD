<?xml version='1.0' encoding='utf-8'?>

<!-- XML File describing construct components and properties -->

<construct>
 	<!-- Core component details -->
 	<component interface="org.construct_infrastructure.component.datastorage.DataStoreManager" implementation="org.construct_infrastructure.component.datastorage.DataStoreManagerImpl" >
 	   <!-- Sets the default expiry time for statements -->
   	   <property name="expiryTime" value="200000" />
 	   <!-- <property name="o:who" value="http://www.pervasive-ontologies.org/ontologies/core/who_ontology.owl" /> -->
 	   <!-- Example: Uncomment the following to use a HSQL Database -->
 	   <!-- <property name="d:driver" value="org.hsqldb.jdbcDriver" /> -->
 	   <!-- <property name="d:url" value="jdbc:hsqldb:file:datastore/construct" /> -->
 	   <!-- <property name="d:user" value="sa" /> -->
 	   <!-- <property name="d:password" value="" /> -->
 	   <!-- <property name="d:dbtype" value="HSQL" /> -->
    </component>
 	
 	<component interface="org.construct_infrastructure.component.queryservice.QueryService" implementation="org.construct_infrastructure.component.queryservice.QueryServiceImpl" />
		
 	<component interface="org.construct_infrastructure.component.persistentqueryservice.PersistentQueryService" implementation="org.construct_infrastructure.component.persistentqueryservice.PersistentQueryServiceImpl" >		
 		<property name="pool" value="10" />
 		<property name="interval" value="5" />
 		<!-- port is optional for all services -->
 		<!--
 			<property name="port" value="4445" />
 		-->
 	</component> 	
 	
 	<!-- local data port -->
 	<component interface="org.construct_infrastructure.component.dataport.DataPort" implementation="org.construct_infrastructure.component.dataport.DataPortImpl" />

 	
	<!-- Discovery and Resgistry services for remote access into Construct services (e.g. QueryService) -->
 	<component interface="org.construct_infrastructure.component.discovery.RegistryService" implementation="org.construct_infrastructure.component.discovery.RegistryServiceImpl" />
 	<component interface="org.construct_infrastructure.component.discovery.DiscoveryService" implementation="org.construct_infrastructure.component.discovery.DiscoveryServiceImpl" />

 	<!-- Gossiping and Network related. Comment out if you want to run a standalone version -->
 	<component interface="org.construct_infrastructure.component.network.NetworkManager" implementation="org.construct_infrastructure.component.network.NetworkManagerImpl" />
 	<component interface="org.construct_infrastructure.component.gossiping.GossipManager" implementation="org.construct_infrastructure.component.gossiping.GossipManagerImpl" /> 
	<component interface="org.construct_infrastructure.component.gossiping.membership.MembershipManager" implementation="org.construct_infrastructure.component.gossiping.membership.MembershipManagerImpl" /> 
	<component interface="org.construct_infrastructure.component.gossiping.buffer.BufferManager" implementation="org.construct_infrastructure.component.gossiping.buffer.BufferManagerImpl">
		<property name="buffer_size" value="1000" />
 	</component>  
	
 	<!-- Extension Components -->
 	<!-- Query Viewer -->
	<component interface="org.construct_infrastructure.component.queryviewer.QueryViewer" implementation="org.construct_infrastructure.component.queryviewer.QueryViewerImpl" />
	
	<!-- HTTP port 
	<component interface="org.construct_infrastructure.component.httpport.HttpPort" implementation="org.construct_infrastructure.component.httpport.HttpPortImpl">
		<property name="port" value="8888" />
	</component>-->
	
	
 	<!-- Global properties -->
	<!-- Logging level: ALL|SEVERE|INFO|CONFIG|FINE|FINER|FINEST|OFF -->
 	<property name="loggingLevel" value="ALL" />
 	
	<!-- Logging limit: The maximum number of bytes to write to any one file -->
 	<property name="loggingLimit" value="1000000" />
 	
	<!-- Logging file count: The number of files to rotate -->
 	<property name="loggingFileCount" value="10" />
 	
	<!-- Logging file name: The base name to use for the log files -->
 	<property name="logFileName" value="Construct.log" />
 	
 	<!-- Logging directory: Where the log files are stored -->
 	<property name="logDirectory" value ="logs/" />
 	
 	<!-- Hostname: the hostname of this machine -->
 	<property name="hostname" value ="crypt.ucd.ie" />
 	
</construct>
