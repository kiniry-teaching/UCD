-- ===================================================================
-- Built-in BON types
-- ===================================================================

class_chart TUPLE
end

class_chart BOOLEAN
end

class_chart VALUE
end

class_chart INTEGER
end

class_chart REAL
end

class_chart STRING
end

class_chart SEQUENCE
end

class_chart SET
end

class_chart BAG
end

-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-- DISPLAY cluster classes
-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

class_chart HIGH_SCORE_DISPLAY
  query
    "Are the high scores currently displayed?"
  command
    "Display the high scores.",
    "Permit the player to add a new name for high score S."
end

class_chart INFO_PANEL
  query
    "Is the information panel currently displayed?"
  command
    "Display the information panel.",
    "Update the displayed information panel."
  constraint
    "The information panel may only be updated if it is displayed."
end

-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-- INPUT cluster classes
-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

class_chart KEYBOARD_INPUT
  query
    "What is your keycode?"
  command
    "Character 'k' is your keycode."
  constraint
    "Keycodes are ASCII codes whose values range from 0 to 255.",
    "Keycodes are set exactly once per keyboard input."
end

class_chart INPUT_HANDLER
  query
    "What are the legal keyboard inputs?",
    "Is character 'k' a legal keyboard input?"
  command
    "Process keyboard input character 'k'."
  constraint
    "One can only start the game while the high score list is being shown.",
    "Asking for the high score list only works during the game demo.",
    "Player input only works while the game is being played."
end

class_chart DISPLAY_HIGH_SCORES
  inherit KEYBOARD_INPUT
  constraint
    "My keycode is 'h'."
end

class_chart TOGGLE_MUSIC_OR_SOUND_EFFECTS
  inherit KEYBOARD_INPUT
  constraint
    "My keycode is 'm'."
end

class_chart START_GAME
  inherit KEYBOARD_INPUT
  constraint
    "My keycode is '[space]'."
end

class_chart STOP_GAME
  inherit KEYBOARD_INPUT
  constraint
    "My keycode is '[escape]'."
end

class_chart FIRE_GUN
  inherit KEYBOARD_INPUT
  constraint
    "My keycode is '[return]'."
end

class_chart TURN_LEFT
  inherit KEYBOARD_INPUT
  constraint
    "My keycode is 'a'."
end

class_chart TURN_RIGHT
  inherit KEYBOARD_INPUT
  constraint
    "My keycode is 's'."
end

class_chart USE_ENGINE
  inherit KEYBOARD_INPUT
  constraint
    "My keycode is '[shift]'."
end

class_chart USE_SHIELD
  inherit KEYBOARD_INPUT
  constraint
    "My keycode is '[space]'."
end

-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-- ENTITIES.ABOUT_GAME cluster classes
-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

class_chart BONUS
  query
    "What is your value?"
  command
    "Your value is 'v'."
  constraint
    "Bonus values are always non-negative."
end

class_chart FUEL
  inherit INTEGER
  constraint
    "Fuel is conserved."
end

class_chart FUELABLE
  query
    "How much fuel do you contain?",
    "How much fuel can you contain?"
  command
    "Set your fuel content to 'f' units.",
    "Decrease your fuel content by 'f' units."
  constraint
    "Fuel content is always non-negative and finite."
end

class_chart HIGH_SCORES
  inherit SEQUENCE
  query
    "What are the current high scores?",
    "What is high score number N?"
  command
    "Is score S a new high score?",
    "Insert score S into the high score table."
  constraint
    "High scores are ordered from high to low.",
    "There are eight top high scores.",
    "There is a fixed initial set of high scores."
end

class_chart LIVES
  inherit INTEGER
  constraint
    "Number of lives is always non-negative and finite."
end

class_chart SCORE
  inherit INTEGER
  constraint
    "Score is always non-negative and finite."
end

-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-- ENTITIES.PROPERTIES cluster classes
-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

class_chart COLOR
  query
    "What color are you?"
  command
    "Your color is 'c'."
  constraint
    "There are exactly 16 different colors available.",
    "The legal colors are {..}."
end

class_chart SHAPE
  command
    "Render this shape with orientation 'o' and color 'c'."
end

-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-- ENTITIES cluster classes
-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

class_chart ENTITY
  query
    "What is your physical state?",
    "What are your properties?",
    "What is your shape?"
  command
    "Your physical state is 's'.",
    "Your properties are 'p'.",
    "Your shape is 's'.",
    "Render yourself."
end

class_chart DYNAMIC_ENTITY
  query
    "What is your position?",
    "What is your orientation?",
    "What is your mass?",
    "What is your velocity?",
    "What is your acceleration?",
    "What is your momentum?"
  command
    "Your position is 'p'.",
    "Your orientation is 'o'.",
    "Your mass is 'm'.",
    "Your velocity is 'v'.",
    "Your acceleration is 'a'."
  constraint
    "Momentum is the product of mass and velocity."
end

class_chart STATIC_ENTITY
  constraint
    "All queries are constant.",
    "Mass, velocity, acceleration, and momentum are all zero."
end

class_chart ENEMY_ENTITY
  inherit ENTITY, ATTACK, DISTURB
  query
    "What is your attack behavior AI?",
    "What is your disturb behavior AI?"
  command
    "Your attack behavior is AI 'a'?",
    "Your disturb behavior is AI 'd'?"
end

class_chart FRIEND_ENTITY
  inherit ENTITY
end

class_chart NEUTRAL_ENTITY
  inherit ENTITY
end

-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-- ENTITIES.IN_GAME cluster classes
-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

class_chart BARRIER
  inherit NEUTRAL_ENTITY, STATIC_ENTITY, ANIMATABLE
  query
    "Are you closed?",
    "Are you open?",
    "Are you moving?"
  command
    "Begin closing.",
    "Begin opening."
end

class_chart BULLET
  inherit ENEMY_ENTITY, DYNAMIC_ENTITY
  constraint
    "Bullets are destroyed on contact with a barrier, a factory, a \
   \ fuel pod, the goal sphere, a gun turrent, the spaceship, or the \
   \ terrain.",
    "Bullets have a mass of 1 kg."
end

class_chart EXPLOSION
  inherit NEUTRAL_ENTITY, STATIC_ENTITY, ANIMATABLE
end

class_chart FACTORY
  inherit NEUTRAL_ENTITY, STATIC_ENTITY, ANIMATABLE
  query
    "How much damage have you sustained?",
    "What is your chimney?",
    "What is your sphere?"
  command
    "You have sustained 'd' units of damage."
  constraint
    "All factories have exactly one sphere and one chimney.",
    "A bullet causes 1 unit of damage.",
    "Each second 1 unit of damage is eliminated.",
    "A factory initially has zero units of damage.",
    "A factory can sustain 20 units of damage before it is destroyed.",
    "A factory with more than 10 units of damage has a chimney that \
   \ does not smoke.",
    "A factory with at most 10 units of damage has a smoking chimney."
end

class_chart FACTORY_CHIMNEY
  inherit NEUTRAL_ENTITY, STATIC_ENTITY, ANIMATABLE
  query
    "Are you smoking?"
  command
    "You are smoking.",
    "You are not smoking."
  constraint
    "A factories chimney is the same color as its factory.",
    "The goal sphere is destroyed by a factory's chimney.",
    "The spaceship is destroyed by a factory's chimney."
end

class_chart FACTORY_SPHERE
  inherit NEUTRAL_ENTITY, STATIC_ENTITY
  constraint
    "A factory sphere's color is always green.",
    "The goal sphere is not destroyed by a factory's sphere."
end

class_chart FUEL_POD
  inherit NEUTRAL_ENTITY, STATIC_ENTITY, FUELABLE
  constraint
    "A fuel pod is destroyed by a bullet.",
    "The fuel pod is not affected by the goal sphere.",
    "The fuel pod is not affected by the spaceship.",
    "A fuel pod's color is always yellow.",
    "A fuel pod's 'fuel' lettering color is dictated by the amount of \
   \ fuel it contains."
end

class_chart GOAL_SPHERE
  inherit NEUTRAL_ENTITY, DYNAMIC_ENTITY, TOW
  constraint
    "The fuel pod is destroyed by a bullet.",
    "If the fuel pod is destroyed, the spaceship is destroyed.",
    "The goal sphere is destroyed by the factory's chimney, but not \
   \ its sphere.",
    "The goal sphere is not affected by the gun turrent.",
    "The goal sphere is not affected by the fuel pod.",
    "The goal sphere is not affected by space.",
    "The goal sphere is not affected by stars.",
    "The goal sphere is destroyed by the terrain.",
    "When rendered on the terrain, the goal sphere sits on a \
   \ pedestal.",
    "When being towed, the goal sphere is rendered as a sphere.",
    "The shape of the goal sphere is always a circle.",
    "The color of the goal sphere is always green."
end

class_chart GUN_TURRENT
  inherit ENEMY_ENTITY
  constraint
    "A gun turrent always resides on/adjacent to the terrain.",
    "A gun turrent's color is always green."
end

class_chart SPACE
  inherit NEUTRAL_ENTITY, STATIC_ENTITY
  query
    "What are your stars?"
  command
    "Add the star 's' to space."
  constraint
    "Terrain and space are disjoint."
end

class_chart SPACESHIP
  inherit NEUTRAL_ENTITY, FUELABLE, DYNAMIC_ENTITY, TOW
  query
    "How many lives do you have?",
    "What is your current score?",
    "Are you currently towing?"
  command
    "Set your number of lives to 'l' lives.",
    "Set your score to 'p' points.",
    "You are now towing the goal sphere 's'."
  constraint
    "Number of lives is initially 3.",
    "Score is initially 0.",
    "The spaceship is destroyed by the barrier.",
    "The spaceship is destroyed by a bullet.",
    "The spaceship is destroyed by the factory.",
    "The spaceship is destroyed by the fuel pod.",
    "If the spaceship is towing the goal sphere, and the spaceship is \
   \ destroyed, the goal sphere is also destroyed.",
    "The spaceship is destroyed by the gun turrent.",
    "The spaceship is not affected by space.",
    "The spaceship is not affected by a star.",
    "The spaceship is destroyed by the terrain.",
    "A spaceship's mass when empty of all fuel is 10000kg.",
    "A spaceship's mass is the sum of its empty mass, plus the mass of \
   \ its fuel, plus the mass of the goal sphere, if it is being \
   \ towed.",
    "The spaceship's shape is always that of a ship.",
    "The spaceship's color is always white.",
    "The spaceship's initial fuel is 1000 units.",
end

class_chart STAR
  inherit NEUTRAL_ENTITY, STATIC_ENTITY, ANIMATABLE
  constraint
    "A star's location is in space.",
    "A star interacts with no other entities.",
    "Each star blinks irregularly.",
    "A star's shape is always a small square."
end

class_chart TERRAIN
  inherit NEUTRAL_ENTITY, STATIC_ENTITY
  constraint
    "Terrain and space are disjoint.",
    "The shape of the terrain is rendered as a sequence of horizontal \
   \ lines."
end

-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-- ENTITIES.BEHAVIORS cluster classes
-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

class_chart ACTION
  query
    "What is your AI behavior?"
end

class_chart AI
end

class_chart TOW
  inherit ACTION
end

class_chart ATTACK
  inherit ACTION
end

class_chart DISTURB
  inherit ACTION
end

-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-- ANIMATIONS cluster classes
-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

class_chart ANIMATABLE
  query
    "What is your animation?"
  command
    "Your animation is 'a'.",
    "Take a next animation step."
end

class_chart FRAME
end

class_chart ANIMATION
end

class_chart ANIMATION_ENGINE
  query
    "What is your welcome animation?",
    "What is your star animation?",
    "What is your explosion animation?",
    "What is your barrier animation?",
    "What is your factory animation?",
    "What is your escape animation?"
end

class_chart BARRIER_ANIMATION
  inherit ANIMATION
end

class_chart ESCAPE_ANIMATION
  inherit ANIMATION
end

class_chart EXPLOSION_ANIMATION
  inherit ANIMATION
end

class_chart CHIMNEY_ANIMATION
  inherit ANIMATION
end

class_chart STAR_ANIMATION
  inherit ANIMATION
end

class_chart PLANET_EXPLODING_ANIMATION
  inherit ANIMATION
end

class_chart WELCOME_ANIMATION
  inherit ANIMATION
end

-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-- ENTITIES.PROPERTIE cluster classes
-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

class_chart PROPERTIES
end

-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-- AUDIO cluster classes
-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

class_chart MUSIC
  query
    "Is music playing?"
  command
    "Start playing the music.",
    "Stop playing the music."
end

class_chart SOUND_EFFECT
  command
    "Your sound effect is 's'.",
    "Start playing your effect."
end

class_chart SOUND_EFFECTS
  query
    "How many sound effects are there?",
    "What is sound effect 'i'?"
  command
    "Add sound effect 's' at index 'i'?"
end

-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-- PHYSICS cluster classes
-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

class_chart ACCELERATION
  -- in meters^2 per second
  inherit TUPLE -- [REAL, REAL]
  query
    "What is your acceleration in meters per second squared?"
end

class_chart GRAVITY
  inherit REAL
  query
    "What is the gravatational constant?"
  constraint
    "The gravatational constant never changes."
end

class_chart MASS
  -- in kilograms
  inherit REAL
  query
    "What is your mass in kilograms?"
  constraint
    "Mass is always non-negative."
end

class_chart MOMENTUM
  -- in kilograms*meters per second
  inherit REAL
end

class_chart ORIENTATION
  -- in radians
  inherit REAL
end

class_chart POSITION
  -- in meters
  inherit TUPLE
end

class_chart VELOCITY
  -- in meters per second
  inherit TUPLE
end

-- class_chart 
--   indexing
--     author: "Joe Kiniry";
--     module: "COMP 30050";
--     date: "March 2007";
--   explanation
--     "TBD"
--   inherit PARENT0; PARENT1
--   query
--     "TBD"
--   command
--     "TBD"
--   constraint
--     "TBD"
-- end


class_chart THRUST_GAME
  query
    "What is your terrain?",
    "What is your space?",
    "What are all the current entities?",
    "What is the physics system?",
    "What is the audio system?",
    "What are the current animations?"
  command
    "TBD"
  constraint
    "All games have terrain, space, entities, physics, and audio."
end
